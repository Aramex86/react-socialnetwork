{"version":3,"sources":["../../node_modules/style-inject/dist/style-inject.es.js","../../src/index.tsx","components/News/Article.jsx","components/News/News.js","components/Redux/Selectors/news-selector.jsx","components/News/NewsContainer.jsx"],"names":["css","ref","insertAt","document","head","style","top","className","styles","color","smooth","component","viewBox","svgPath","props","useState","visible","setVisible","useEffect","addEventListener","onScroll","removeEventListener","documentElement","scrollTop","React","onClick","window","scrollTo","behavior","scrollToTop","fill","d","Article","title","description","url","image","publishedAt","source","isFetching","src","alt","name","href","target","rel","News","articles","article","map","i","key","author","content","getNewsSelector","state","newsPage","getIsFetching","NewsContainer","this","getNewsRequest","console","log","Component","mapStateToProps","connect","getNews"],"mappings":"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","file":"static/js/6.4eb05df0.chunk.js","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useState, useEffect } from \"react\";\n\n//@ts-ignore\nimport styles from \"./styles.css\";\n\ntype Props = {\n  top?: number;\n  smooth?: boolean;\n  svgPath?: string;\n  viewBox?: string;\n  component?: any;\n};\n\nfunction scrollToTop(smooth: boolean = false) {\n  if (smooth) {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  } else {\n    document.documentElement.scrollTop = 0;\n  }\n}\n\nconst ScrollToTop: React.FC<\n  Props & React.HTMLAttributes<HTMLButtonElement>\n> = ({\n  top = 20,\n  className = styles[\"scroll-to-top\"],\n  color = \"black\",\n  smooth = false,\n  component = \"\",\n  viewBox = \"0 0 256 256\",\n  svgPath = \"M222.138,91.475l-89.6-89.6c-2.5-2.5-6.551-2.5-9.051,0l-89.6,89.6c-2.5,2.5-2.5,6.551,0,9.051s6.744,2.5,9.244,0L122,21.85  V249.6c0,3.535,2.466,6.4,6,6.4s6-2.865,6-6.4V21.85l78.881,78.676c1.25,1.25,2.992,1.875,4.629,1.875s3.326-0.625,4.576-1.875  C224.586,98.025,224.638,93.975,222.138,91.475z\",\n  ...props\n}) => {\n    const [visible, setVisible] = useState(false);\n    useEffect(() => {\n      document.addEventListener(\"scroll\", onScroll);\n      // Remove listener on unmount\n      return () => document.removeEventListener(\"scroll\", onScroll);\n    }, []);\n\n    const onScroll = () => {\n      setVisible(document.documentElement.scrollTop > top);\n    };\n\n    return (\n      <>\n        {visible && (\n          <button\n            className={className}\n            onClick={() => scrollToTop(smooth)}\n            {...props}\n          >\n            {component ? component : (\n              <svg fill={color} viewBox={viewBox}>\n                <path d={svgPath}></path>\n              </svg>\n            )}\n          </button>\n        )}\n      </>\n    );\n  };\n\nexport default ScrollToTop;\n","import React from \"react\";\r\nimport Preloader from '../common/Prealoder/Prealoder';\r\n\r\nconst Article = ({\r\n  title,\r\n  description,\r\n  url,\r\n  image,\r\n  publishedAt,\r\n  source,\r\n  isFetching\r\n}) => {\r\n  return (\r\n    <>\r\n    {isFetching? <Preloader/>: null}\r\n    <div className=\"article-wrapper\">\r\n      <h3 className=\"article-wrapper_title\">{title}</h3>\r\n      <img className=\"article-wrapper_image\" src={image} alt=\"img\" />\r\n      <p className=\"article-wrapper_desc\">{description}</p>\r\n      <div className=\"article-wrapper_fotter\">\r\n        <span className=\"article-wrapper_fotter-author\">{source.name}</span>\r\n        <span className=\"article-wrapper_fotter-urlto\"><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">source</a></span>\r\n        <span className=\"article-wrapper_fotter-date\">{publishedAt}</span>\r\n        <span className=\"article-wrapper_fotter-source\"></span>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport Atricle from \"./Article\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\n\r\n\r\nconst News = ({ articles,isFetching }) => {\r\n  const article = articles.map((article, i) => (\r\n    <Atricle\r\n      key={i}\r\n      author={article.author}\r\n      title={article.title}\r\n      description={article.description}\r\n      url={article.url}\r\n      content={article.content}\r\n      publishedAt={article.publishedAt}\r\n      image={article.image}\r\n      source={article.source}\r\n      isFetching={isFetching}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      {article}\r\n      <ScrollToTop\r\n        smooth\r\n        className=\"up\"\r\n        svgPath=''\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","export const getNewsSelector=(state)=>{\r\n    return state.newsPage.articles;\r\n}\r\n\r\nexport const getIsFetching=(state)=>{\r\n    return state.newsPage.isFetching;\r\n}","import React, { Component } from \"react\";\r\nimport News from \"./News\";\r\nimport { getNewsSelector,getIsFetching } from \"../Redux/Selectors/news-selector\";\r\nimport { connect } from \"react-redux\";\r\nimport { getNews,getNewsRequest } from \"../Redux/news-reducer\";\r\n\r\nclass NewsContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.getNewsRequest();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    return <News articles={this.props.articles} isFetching={this.props.isFetching}/>;\r\n  }\r\n}\r\nexport const mapStateToProps = (state) => {\r\n  return {\r\n    articles: getNewsSelector(state),\r\n    isFetching: getIsFetching(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getNews,getNewsRequest })(NewsContainer);\r\n"],"sourceRoot":""}