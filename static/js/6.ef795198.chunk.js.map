{"version":3,"sources":["../../node_modules/style-inject/dist/style-inject.es.js","../../src/index.tsx","components/News/Article.tsx","components/News/News.tsx","components/Redux/Selectors/news-selector.jsx","components/News/NewsContainer.tsx"],"names":["css","ref","insertAt","document","head","style","top","className","styles","color","smooth","component","viewBox","svgPath","props","useState","visible","setVisible","useEffect","addEventListener","onScroll","removeEventListener","documentElement","scrollTop","React","onClick","window","scrollTo","behavior","scrollToTop","fill","d","Article","title","description","url","section","isFetching","multimedia","date","mainImage","map","i","slice","toLocaleString","publishDate","Date","toLocaleDateString","console","log","src","alt","href","target","rel","News","articles","article","key","abstract","publishedAt","created_date","getNewsSelector","state","newsPage","getIsFetching","NewsContainer","this","getNewsRequest","Component","mapStateToProps","connect","getNews"],"mappings":"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","file":"static/js/6.ef795198.chunk.js","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useState, useEffect } from \"react\";\n\n//@ts-ignore\nimport styles from \"./styles.css\";\n\ntype Props = {\n  top?: number;\n  smooth?: boolean;\n  svgPath?: string;\n  viewBox?: string;\n  component?: any;\n};\n\nfunction scrollToTop(smooth: boolean = false) {\n  if (smooth) {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  } else {\n    document.documentElement.scrollTop = 0;\n  }\n}\n\nconst ScrollToTop: React.FC<\n  Props & React.HTMLAttributes<HTMLButtonElement>\n> = ({\n  top = 20,\n  className = styles[\"scroll-to-top\"],\n  color = \"black\",\n  smooth = false,\n  component = \"\",\n  viewBox = \"0 0 256 256\",\n  svgPath = \"M222.138,91.475l-89.6-89.6c-2.5-2.5-6.551-2.5-9.051,0l-89.6,89.6c-2.5,2.5-2.5,6.551,0,9.051s6.744,2.5,9.244,0L122,21.85  V249.6c0,3.535,2.466,6.4,6,6.4s6-2.865,6-6.4V21.85l78.881,78.676c1.25,1.25,2.992,1.875,4.629,1.875s3.326-0.625,4.576-1.875  C224.586,98.025,224.638,93.975,222.138,91.475z\",\n  ...props\n}) => {\n    const [visible, setVisible] = useState(false);\n    useEffect(() => {\n      document.addEventListener(\"scroll\", onScroll);\n      // Remove listener on unmount\n      return () => document.removeEventListener(\"scroll\", onScroll);\n    }, []);\n\n    const onScroll = () => {\n      setVisible(document.documentElement.scrollTop > top);\n    };\n\n    return (\n      <>\n        {visible && (\n          <button\n            className={className}\n            onClick={() => scrollToTop(smooth)}\n            {...props}\n          >\n            {component ? component : (\n              <svg fill={color} viewBox={viewBox}>\n                <path d={svgPath}></path>\n              </svg>\n            )}\n          </button>\n        )}\n      </>\n    );\n  };\n\nexport default ScrollToTop;\n","import React from \"react\";\r\nimport Preloader from \"../common/Prealoder/Prealoder\";\r\n\r\ntype MultimediaType={\r\n  caption: string\r\n  copyright: string\r\n  format: string\r\n  height: number\r\n  subtype: string\r\n  type: string\r\n  url: string\r\n  width: number\r\n}\r\n\r\n\r\n\r\ntype ArticlePropsType = {\r\n  title: string;\r\n  description: string;\r\n  url: string;\r\n  publishedAt: string;\r\n  section: string;\r\n  isFetching: boolean;\r\n  multimedia:Array<MultimediaType>\r\n  date:string\r\n};\r\n\r\nconst Article: React.FC<ArticlePropsType> = ({\r\n  title,\r\n  description,\r\n  url,\r\n  section,\r\n  isFetching,\r\n  multimedia,\r\n  date\r\n}) => {\r\n\r\nconst mainImage = multimedia.map(i=>i.url).slice(0,1).toLocaleString();\r\n\r\nconst publishDate = new Date(date).toLocaleDateString();\r\nconsole.log(publishDate)\r\n  return (\r\n    <>\r\n      {isFetching ? <Preloader /> : null}\r\n      <div className=\"article-wrapper\">\r\n        <h3 className=\"article-wrapper_title\">{title}</h3>\r\n        <img className=\"article-wrapper_image\" src={mainImage} alt=\"img\" />\r\n        <p className=\"article-wrapper_desc\">{description}</p>\r\n        <div className=\"article-wrapper_fotter\">\r\n          <span className=\"article-wrapper_fotter-author\">{section}</span>\r\n          <span className=\"article-wrapper_fotter-urlto\">\r\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              source\r\n            </a>\r\n          </span>\r\n          <span className=\"article-wrapper_fotter-date\">publish date: {publishDate}</span>\r\n          <span className=\"article-wrapper_fotter-source\"></span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport Atricle from \"./Article\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\n\r\ntype MultimediaType = {\r\n  caption: string;\r\n  copyright: string;\r\n  format: string;\r\n  height: number;\r\n  subtype: string;\r\n  type: string;\r\n  url: string;\r\n  width: number;\r\n};\r\n\r\ntype ArticleType = {\r\n  title: string;\r\n  description: string;\r\n  url: string;\r\n publishedAt: string;\r\n  section: string;\r\n  multimedia: Array<MultimediaType>;\r\n  abstract:string\r\n  created_date:string\r\n};\r\n\r\ntype NewsPropsType = {\r\n  articles: Array<ArticleType>;\r\n  isFetching: boolean;\r\n};\r\n\r\nconst News: React.FC<NewsPropsType> = ({ articles, isFetching }) => {\r\n  console.log(articles);\r\n  const article = articles.map((article, i) => (\r\n    <Atricle\r\n      key={i}\r\n      title={article.title}\r\n      description={article.abstract}\r\n      url={article.url}\r\n      publishedAt={article.publishedAt}\r\n      section={article.section}\r\n      isFetching={isFetching}\r\n      multimedia={article.multimedia}\r\n      date={article.created_date}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      {article}\r\n      <ScrollToTop smooth className=\"up\" svgPath=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","export const getNewsSelector=(state)=>{\r\n    return state.newsPage.articles;\r\n}\r\n\r\nexport const getIsFetching=(state)=>{\r\n    return state.newsPage.isFetching;\r\n}","import React, { Component } from \"react\";\r\nimport News from \"./News\";\r\nimport {\r\n  getNewsSelector,\r\n  getIsFetching,\r\n} from \"../Redux/Selectors/news-selector\";\r\nimport { connect } from \"react-redux\";\r\nimport { getNews, getNewsRequest } from \"../Redux/news-reducer\";\r\n\r\n\r\n\r\ntype MultimediaType={\r\n  caption: string\r\n  copyright: string\r\n  format: string\r\n  height: number\r\n  subtype: string\r\n  type: string\r\n  url: string\r\n  width: number\r\n}\r\n\r\ntype ArticleType = {\r\n  title: string;\r\n  description: string;\r\n  url: string;\r\n  publishedAt: string;\r\n  section: string;\r\n  multimedia:Array<MultimediaType>\r\n  abstract:string\r\n  created_date:string\r\n};\r\n\r\n\r\nexport type NewsPropsType = {\r\n  articles: Array<ArticleType>;\r\n  isFetching: boolean;\r\n  getNewsRequest: () => void;\r\n};\r\n\r\nclass NewsContainer extends Component<NewsPropsType> {\r\n  componentDidMount() {\r\n    this.props.getNewsRequest();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <News articles={this.props.articles} isFetching={this.props.isFetching} />\r\n    );\r\n  }\r\n}\r\nexport const mapStateToProps = (state: any) => {\r\n  return {\r\n    articles: getNewsSelector(state),\r\n    isFetching: getIsFetching(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getNews, getNewsRequest })(\r\n  NewsContainer\r\n);\r\n"],"sourceRoot":""}